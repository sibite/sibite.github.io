(()=>{"use strict";function t(t,s,e){return{configurable:e.configurable,enumerable:e.enumerable,get(){return e.value.bind(this)}}}class s{constructor(t){this.createHostElement(t)}createHostElement(t=""){const s=document.createElement("template");s.innerHTML=t;const e=s.content.firstElementChild;e instanceof HTMLElement?this.hostEl=e:this.hostEl=s}appendTo(t){t.append(this.hostEl)}}class e extends s{constructor(){super('<div class="stopwatch__time-display"> <p class="stopwatch__time-display-text" id="js-time-display-text"></p> </div>'),this.textEl=this.hostEl.querySelector("#js-time-display-text"),this.onInit()}onInit(){this.render(0)}render(t){const s=this.getTimeStructure(Math.abs(t)),e=-1===Math.sign(t)?"-":"",n=this.getTimeFullText(s);this.textEl.textContent=n,this.updateDisplayStyle(e)}updateDisplayStyle(t){"-"===t?this.hostEl.classList.add("stopwatch__time-display--countdown"):this.hostEl.classList.remove("stopwatch__time-display--countdown")}getTimeStructure(t){const s=new Date(t);return{hours:Math.floor(t/36e5),minutes:s.getMinutes(),seconds:s.getSeconds(),centiseconds:Math.floor(s.getMilliseconds()/10)}}getTimeFullText(t){const s=t.centiseconds.toString().padStart(2,"0"),e=`${t.seconds.toString().padStart(2,"0")}.`,n=`${t.minutes.toString().padStart(2,"0")}:`;let o;return o=t.hours>0?`${t.hours}:`:"",o+n+e+s}}var n=function(t,s,e,n){var o,i=arguments.length,u=i<3?s:null===n?n=Object.getOwnPropertyDescriptor(s,e):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)u=Reflect.decorate(t,s,e,n);else for(var a=t.length-1;a>=0;a--)(o=t[a])&&(u=(i<3?o(u):i>3?o(s,e,u):o(s,e))||u);return i>3&&u&&Object.defineProperty(s,e,u),u};class o extends s{constructor(t,s){super('<div class="stopwatch__toolbar"> <div class="stopwatch__controls"> <button class="button" type="button" id="pick-countdown"> <i class="button__icon icon-ic_fluent_time_picker_24_filled" Title="Pause"></i> </button> <button class="button" type="button" id="pause"> <i class="button__icon icon-ic_fluent_pause_24_filled" Title="Pause"></i> </button> <button class="button button--state-success" type="button" id="start"> <i class="button__icon icon-ic_fluent_play_24_filled" Title="Pause"></i> </button> <button class="button button--state-danger" type="button" id="stop"> <i class="button__icon icon-ic_fluent_stop_24_filled" Title="Pause"></i> </button> </div> <div class="stopwatch__countdowns stopwatch__countdowns--hidden"></div> </div>'),this.subscriptions=t,this.startBtn=this.hostEl.querySelector("#start"),this.pauseBtn=this.hostEl.querySelector("#pause"),this.stopBtn=this.hostEl.querySelector("#stop"),this.pickCountdownBtn=this.hostEl.querySelector("#pick-countdown"),this.coutdownsToolbar=this.hostEl.querySelector(".stopwatch__countdowns"),this.addEventListeners(),this.appendCountdownButtons(s)}appendCountdownButtons(t){t.forEach((t=>{const s=document.createElement("button");s.classList.add("button"),s.id=`countdown-${t}`,s.textContent=t.toString(),s.onpointerup=()=>this.onCountdownOptionPicked(t),this.coutdownsToolbar.appendChild(s)}))}addEventListeners(){this.startBtn.onpointerup=this.onStartClick,this.pauseBtn.onpointerup=this.onPauseClick,this.stopBtn.onpointerup=this.onStopClick,this.pickCountdownBtn.onpointerup=this.onCountdownPickClick}hideButton(t){t.classList.add("button--hidden")}unhideButton(t){t.classList.remove("button--hidden")}onStartClick(){this.subscriptions.start(),this.coutdownsToolbar.classList.add("stopwatch__countdowns--hidden"),this.hideButton(this.stopBtn),this.hideButton(this.pickCountdownBtn),this.hideButton(this.startBtn)}onPauseClick(){this.subscriptions.pause(),this.unhideButton(this.stopBtn),this.unhideButton(this.startBtn)}onStopClick(){this.subscriptions.stop(),this.unhideButton(this.stopBtn),this.unhideButton(this.pickCountdownBtn),this.unhideButton(this.startBtn)}onCountdownPickClick(){this.coutdownsToolbar.classList.toggle("stopwatch__countdowns--hidden")}onCountdownOptionPicked(t){this.subscriptions.setCountdown(t)}}n([t],o.prototype,"onStartClick",null),n([t],o.prototype,"onPauseClick",null),n([t],o.prototype,"onStopClick",null),n([t],o.prototype,"onCountdownPickClick",null),n([t],o.prototype,"onCountdownOptionPicked",null);var i=function(t,s,e,n){var o,i=arguments.length,u=i<3?s:null===n?n=Object.getOwnPropertyDescriptor(s,e):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)u=Reflect.decorate(t,s,e,n);else for(var a=t.length-1;a>=0;a--)(o=t[a])&&(u=(i<3?o(u):i>3?o(s,e,u):o(s,e))||u);return i>3&&u&&Object.defineProperty(s,e,u),u};class u extends s{constructor(){super('<div class="stopwatch"></div>'),this.timeDisplay=new e,this.toolbar=new o({start:this.start,pause:this.pause,stop:this.stop,setCountdown:this.setCountdown},[2,5,10,30]),this.running=!1,this.elapsedTime=0,this.lastStartTimestamp=0,this.onInit()}onInit(){this.appendDisplay(),this.appendToolbar()}appendDisplay(){this.timeDisplay.appendTo(this.hostEl)}appendToolbar(){this.toolbar.appendTo(this.hostEl)}getElapsedTimeToNow(){const t=Date.now()-this.lastStartTimestamp;return this.elapsedTime+t}start(){this.running||(this.running=!0,this.lastStartTimestamp=Date.now(),requestAnimationFrame(this.step))}pause(){this.running&&(this.elapsedTime=this.getElapsedTimeToNow(),this.running=!1)}stop(){this.elapsedTime=0,this.running=!1,this.step()}setCountdown(t){this.running||this.elapsedTime>0||(this.elapsedTime=1e3*-t,this.step())}step(){this.running?(this.timeDisplay.render(this.getElapsedTimeToNow()),requestAnimationFrame(this.step)):this.timeDisplay.render(this.elapsedTime)}}i([t],u.prototype,"start",null),i([t],u.prototype,"pause",null),i([t],u.prototype,"stop",null),i([t],u.prototype,"setCountdown",null),i([t],u.prototype,"step",null);const a=document.getElementById("app");function l(){a.style.minHeight=`${window.innerHeight}px`}l(),window.addEventListener("resize",l),(new u).appendTo(a)})();